// Java proram to evaluate value of a postfix 
// expression having multiple digit operands 
import java.util.Stack; 

class Postfix 
{ 
	// Method to evaluate value of a postfix expression 
	static int evaluatePostfix(String exp) 
	{ 
		Stack<Integer> stack = new Stack<>(); 
		
		String expression[]=exp.split(" ");
		
		for(int i = 0; i < expression.length; i++) 
		{ 
			
			String c = expression[i];
			char temp = c.charAt(0); 
			
			
			// If the scanned character is an operand 
			// (number here),extract the number 
			// Push it to the stack. 
			 if(Character.isDigit(temp)) 
			{ 
				stack.push(Integer.parseInt(c)); 
			}
			else if(c.equals("DUP"))
			{
				
				stack.push(stack.peek());
			}
			else if(c.equals("POP"))
			{
				stack.pop();
			}			
			else
			{ 
				int val1 = stack.pop(); 
				int val2 = stack.pop(); 
				
				switch(c.charAt(i)) 
				{ 
					case '+': 
					stack.push(val2+val1); 
					break; 
					
					case '-': 
					stack.push(val2- val1); 
					break; 
					
					case '/': 
					stack.push(val2/val1); 
					break; 
					
					case '*': 
					stack.push(val2*val1); 
					break; 
			} 
			} 
		} 
		return stack.pop(); 
	} 
	
	// Driver program to test above functions 
	public static void main(String[] args) 
	{ 
		String exp = "13 DUP 4 POP 5 DUP + DUP + -"; 
		System.out.println(evaluatePostfix(exp)); 
	} 
} 

// This code is contributed by Arnab Kundu 
